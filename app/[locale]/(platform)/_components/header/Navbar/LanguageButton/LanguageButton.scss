@use "./../../../../styles/mixins/mixins";
@use "./../../../../styles/variables/variables";

.container {
  position: relative;
  @include mixins.flexLanguageButton(flex, start);
  padding: 0;
  margin: 0rem;
  z-index: 4;
  width: 100%;
  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; // Añadir transición para la animación

  &.hide {
    opacity: 0;
    transform: translateY(
      -20px
    ); // Mover hacia arriba para desaparecer suavemente
    pointer-events: none; // Deshabilitar interacción cuando está oculto
  }

  .selector {
    position: relative;
    width: 60%;
    background-color: var(--smoke-white);
    height: 50px;
    display: flex;
    justify-content: space-around;
    align-items: center;
    border-radius: 10px;
    box-shadow: 0 0 16px rgba(0, 0, 0, 0.2);

    .selector-item {
      position: relative;
      flex-basis: calc(70% / 3);
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;

      .selector-item_radio {
        appearance: none;
        display: none;
      }

      .selector-item_label {
        position: relative;
        height: 25px;
        width: 30px;
        text-align: center;
        border-radius: 50%;
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.6), 0 4px 8px rgba(0, 0, 0, 0.6); // Sombra por defecto
        transition: transform 0.5s, box-shadow 0.5s, filter 0.5s;
        transform: translateY(0);
        cursor: pointer;

        img {
          filter: grayscale(100%);
          transition: filter 0.5s;
        }

        &:hover img {
          filter: none; // Volver al color original cuando se hace hover
        }
      }

      input.selector-item_radio:checked + .selector-item_label {
        box-shadow: none; // Eliminar sombra cuando está seleccionado
        transform: translateY(3px); // Simular la bajada del botón

        img {
          filter: none; // Volver al color original cuando está seleccionado
        }
      }
    }
  }
}
